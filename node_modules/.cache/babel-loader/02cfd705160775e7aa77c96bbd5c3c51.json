{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pascal/test/NestorAppartement/src/Rooms/Rooms.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport url from \"../Utlis/Url\";\nimport api from \"../Utlis/ApiRequest\";\nimport { pagination, changePagination } from \"../Utlis/Pagination\";\nimport { displayRooms, searchEntry } from \"./Display\";\nimport { searchRoom } from \"./SearchAlgorithm\";\n\nfunction useLogic() {\n  _s();\n\n  const [rooms, setRooms] = useState(null);\n  const [index, setIndex] = useState(0);\n  const [displayRoomsArray, setDisplayRoomsArray] = useState(null);\n  const [searchValue, setSearchValue] = useState({});\n  const [searchResult, setSearchResult] = useState(null);\n  useEffect(() => {\n    api.get(url.room.base).then(data => {\n      if (!data) return;\n      setRooms(data.rooms);\n      setDisplayRoomsArray(pagination(0, data.rooms));\n    });\n  }, []);\n\n  function triggerSearch() {\n    setSearchResult(searchRoom(rooms, searchValue));\n  }\n\n  function removeRoom(room, index) {\n    function createNewArray(currentRooms) {\n      let newRooms = currentRooms.map((oldRoom, key) => {\n        if (key === index) return null;\n        return oldRoom;\n      });\n      return newRooms;\n    }\n\n    if (index !== undefined) api.delete(url.room.id(room.id)).then(data => {\n      if (!data) return;\n      searchResult ? setSearchResult(createNewArray) : setDisplayRoomsArray(createNewArray);\n    });\n  }\n\n  return {\n    rooms,\n    displayRoomsArray,\n    searchValue,\n    setSearchValue,\n    triggerSearch,\n    setDisplayRoomsArray,\n    searchResult,\n    setSearchResult,\n    index,\n    setIndex,\n    removeRoom\n  };\n}\n\n_s(useLogic, \"QlUdd4DB3wIWqZ0Yld6bgvvGTlY=\");\n\nexport default function App({}) {\n  _s2();\n\n  const {\n    rooms,\n    displayRoomsArray,\n    searchValue,\n    setSearchValue,\n    triggerSearch,\n    setDisplayRoomsArray,\n    searchResult,\n    setSearchResult,\n    index,\n    setIndex,\n    removeRoom\n  } = useLogic();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-3\",\n      children: \"Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" btn btn-primary mb-3 bg-white border-white\",\n      children: \"Empty space\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), searchEntry(searchValue, setSearchValue, triggerSearch), displayRooms(searchResult ? searchResult : displayRoomsArray, removeRoom), !searchResult ? changePagination(index, setIndex, setDisplayRoomsArray, rooms) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"ESLpDfV9yPu6wlLKAho24Fpx2xA=\", false, function () {\n  return [useLogic];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pascal/test/NestorAppartement/src/Rooms/Rooms.js"],"names":["React","useEffect","useState","url","api","pagination","changePagination","displayRooms","searchEntry","searchRoom","useLogic","rooms","setRooms","index","setIndex","displayRoomsArray","setDisplayRoomsArray","searchValue","setSearchValue","searchResult","setSearchResult","get","room","base","then","data","triggerSearch","removeRoom","createNewArray","currentRooms","newRooms","map","oldRoom","key","undefined","delete","id","App"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,qBAA7C;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,WAA1C;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACa,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC,IAAD,CAA1D;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,IAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,GAAG,CAACiB,GAAJ,CAAQlB,GAAG,CAACmB,IAAJ,CAASC,IAAjB,EAAuBC,IAAvB,CAA6BC,IAAD,IAAU;AACpC,UAAI,CAACA,IAAL,EAAW;AACXb,MAAAA,QAAQ,CAACa,IAAI,CAACd,KAAN,CAAR;AACAK,MAAAA,oBAAoB,CAACX,UAAU,CAAC,CAAD,EAAIoB,IAAI,CAACd,KAAT,CAAX,CAApB;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,WAASe,aAAT,GAAyB;AACvBN,IAAAA,eAAe,CAACX,UAAU,CAACE,KAAD,EAAQM,WAAR,CAAX,CAAf;AACD;;AACD,WAASU,UAAT,CAAoBL,IAApB,EAA0BT,KAA1B,EAAiC;AAC/B,aAASe,cAAT,CAAwBC,YAAxB,EAAsC;AACpC,UAAIC,QAAQ,GAAGD,YAAY,CAACE,GAAb,CAAiB,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAChD,YAAIA,GAAG,KAAKpB,KAAZ,EAAmB,OAAO,IAAP;AACnB,eAAOmB,OAAP;AACD,OAHc,CAAf;AAIA,aAAOF,QAAP;AACD;;AACD,QAAIjB,KAAK,KAAKqB,SAAd,EACE9B,GAAG,CAAC+B,MAAJ,CAAWhC,GAAG,CAACmB,IAAJ,CAASc,EAAT,CAAYd,IAAI,CAACc,EAAjB,CAAX,EAAiCZ,IAAjC,CAAuCC,IAAD,IAAU;AAC9C,UAAI,CAACA,IAAL,EAAW;AACXN,MAAAA,YAAY,GACRC,eAAe,CAACQ,cAAD,CADP,GAERZ,oBAAoB,CAACY,cAAD,CAFxB;AAGD,KALD;AAMH;;AACD,SAAO;AACLjB,IAAAA,KADK;AAELI,IAAAA,iBAFK;AAGLE,IAAAA,WAHK;AAILC,IAAAA,cAJK;AAKLQ,IAAAA,aALK;AAMLV,IAAAA,oBANK;AAOLG,IAAAA,YAPK;AAQLC,IAAAA,eARK;AASLP,IAAAA,KATK;AAULC,IAAAA,QAVK;AAWLa,IAAAA;AAXK,GAAP;AAaD;;GA/CQjB,Q;;AAiDT,eAAe,SAAS2B,GAAT,CAAa,EAAb,EAAiB;AAAA;;AAC9B,QAAM;AACJ1B,IAAAA,KADI;AAEJI,IAAAA,iBAFI;AAGJE,IAAAA,WAHI;AAIJC,IAAAA,cAJI;AAKJQ,IAAAA,aALI;AAMJV,IAAAA,oBANI;AAOJG,IAAAA,YAPI;AAQJC,IAAAA,eARI;AASJP,IAAAA,KATI;AAUJC,IAAAA,QAVI;AAWJa,IAAAA;AAXI,MAYFjB,QAAQ,EAZZ;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGF,WAAW,CAACS,WAAD,EAAcC,cAAd,EAA8BQ,aAA9B,CALd,EAMGnB,YAAY,CACXY,YAAY,GAAGA,YAAH,GAAkBJ,iBADnB,EAEXY,UAFW,CANf,EAUG,CAACR,YAAD,GACGb,gBAAgB,CAACO,KAAD,EAAQC,QAAR,EAAkBE,oBAAlB,EAAwCL,KAAxC,CADnB,GAEG,IAZN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;IA/BuB0B,G;UAalB3B,Q;;;KAbkB2B,G","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport url from \"../Utlis/Url\";\nimport api from \"../Utlis/ApiRequest\";\nimport { pagination, changePagination } from \"../Utlis/Pagination\";\nimport { displayRooms, searchEntry } from \"./Display\";\nimport { searchRoom } from \"./SearchAlgorithm\";\n\nfunction useLogic() {\n  const [rooms, setRooms] = useState(null);\n  const [index, setIndex] = useState(0);\n  const [displayRoomsArray, setDisplayRoomsArray] = useState(null);\n  const [searchValue, setSearchValue] = useState({});\n  const [searchResult, setSearchResult] = useState(null);\n\n  useEffect(() => {\n    api.get(url.room.base).then((data) => {\n      if (!data) return;\n      setRooms(data.rooms);\n      setDisplayRoomsArray(pagination(0, data.rooms));\n    });\n  }, []);\n\n  function triggerSearch() {\n    setSearchResult(searchRoom(rooms, searchValue));\n  }\n  function removeRoom(room, index) {\n    function createNewArray(currentRooms) {\n      let newRooms = currentRooms.map((oldRoom, key) => {\n        if (key === index) return null;\n        return oldRoom;\n      });\n      return newRooms;\n    }\n    if (index !== undefined)\n      api.delete(url.room.id(room.id)).then((data) => {\n        if (!data) return;\n        searchResult\n          ? setSearchResult(createNewArray)\n          : setDisplayRoomsArray(createNewArray);\n      });\n  }\n  return {\n    rooms,\n    displayRoomsArray,\n    searchValue,\n    setSearchValue,\n    triggerSearch,\n    setDisplayRoomsArray,\n    searchResult,\n    setSearchResult,\n    index,\n    setIndex,\n    removeRoom,\n  };\n}\n\nexport default function App({}) {\n  const {\n    rooms,\n    displayRoomsArray,\n    searchValue,\n    setSearchValue,\n    triggerSearch,\n    setDisplayRoomsArray,\n    searchResult,\n    setSearchResult,\n    index,\n    setIndex,\n    removeRoom,\n  } = useLogic();\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center my-3\">Room</h1>\n      <div className=\" btn btn-primary mb-3 bg-white border-white\">\n        Empty space\n      </div>\n      {searchEntry(searchValue, setSearchValue, triggerSearch)}\n      {displayRooms(\n        searchResult ? searchResult : displayRoomsArray,\n        removeRoom\n      )}\n      {!searchResult\n        ? changePagination(index, setIndex, setDisplayRoomsArray, rooms)\n        : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}