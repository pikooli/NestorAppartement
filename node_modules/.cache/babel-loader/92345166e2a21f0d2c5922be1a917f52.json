{"ast":null,"code":"import { modalAlertError } from \"./Alert\";\nconst corsApi = \"https://stark-fjord-10743.herokuapp.com/\";\nconst api = {\n  get: async url => {\n    if (url) return await fetch(url).then(async data => {\n      if (data.status === 200) return await data.json();else {\n        data.text().then(text => modalAlertError(text));\n        return null;\n      }\n    }).catch(error => console.log(\"error\", error));\n  },\n  delete: async url => {\n    if (url) return await fetch(corsApi + url, {\n      method: \"DELETE\"\n    }).then(async data => {\n      if (data.status === 202) return true;else {\n        data.text().then(text => modalAlertError(text));\n        return null;\n      }\n    }).catch(error => console.log(\"error\", error));\n  },\n  post: async (url, body) => {\n    if (body) return await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(async data => {\n      if (data.status === 201) return true;else {\n        data.text().then(text => modalAlertError(text));\n        return null;\n      }\n    }).catch(error => console.log(\"error\", error));else return null;\n  }\n};\nexport default api;","map":{"version":3,"sources":["/Users/pascal/test/NestorAppartement/src/Utlis/ApiRequest.js"],"names":["modalAlertError","corsApi","api","get","url","fetch","then","data","status","json","text","catch","error","console","log","delete","method","post","body","headers","JSON","stringify"],"mappings":"AAAA,SAASA,eAAT,QAAgC,SAAhC;AACA,MAAMC,OAAO,GAAG,0CAAhB;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,MAAOC,GAAP,IAAe;AAClB,QAAIA,GAAJ,EACE,OAAO,MAAMC,KAAK,CAACD,GAAD,CAAL,CACVE,IADU,CACL,MAAOC,IAAP,IAAgB;AACpB,UAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB,OAAO,MAAMD,IAAI,CAACE,IAAL,EAAb,CAAzB,KACK;AACHF,QAAAA,IAAI,CAACG,IAAL,GAAYJ,IAAZ,CAAkBI,IAAD,IAAUV,eAAe,CAACU,IAAD,CAA1C;AACA,eAAO,IAAP;AACD;AACF,KAPU,EAQVC,KARU,CAQHC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CARP,CAAb;AASH,GAZS;AAaVG,EAAAA,MAAM,EAAE,MAAOX,GAAP,IAAe;AACrB,QAAIA,GAAJ,EACE,OAAO,MAAMC,KAAK,CAACJ,OAAO,GAAGG,GAAX,EAAgB;AAChCY,MAAAA,MAAM,EAAE;AADwB,KAAhB,CAAL,CAGVV,IAHU,CAGL,MAAOC,IAAP,IAAgB;AACpB,UAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB,OAAO,IAAP,CAAzB,KACK;AACHD,QAAAA,IAAI,CAACG,IAAL,GAAYJ,IAAZ,CAAkBI,IAAD,IAAUV,eAAe,CAACU,IAAD,CAA1C;AACA,eAAO,IAAP;AACD;AACF,KATU,EAUVC,KAVU,CAUHC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAVP,CAAb;AAWH,GA1BS;AA2BVK,EAAAA,IAAI,EAAE,OAAOb,GAAP,EAAYc,IAAZ,KAAqB;AACzB,QAAIA,IAAJ,EACE,OAAO,MAAMb,KAAK,CAACD,GAAD,EAAM;AACtBY,MAAAA,MAAM,EAAE,MADc;AAEtBG,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFa;AAKtBD,MAAAA,IAAI,EAAEE,IAAI,CAACC,SAAL,CAAeH,IAAf;AALgB,KAAN,CAAL,CAOVZ,IAPU,CAOL,MAAOC,IAAP,IAAgB;AACpB,UAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB,OAAO,IAAP,CAAzB,KACK;AACHD,QAAAA,IAAI,CAACG,IAAL,GAAYJ,IAAZ,CAAkBI,IAAD,IAAUV,eAAe,CAACU,IAAD,CAA1C;AACA,eAAO,IAAP;AACD;AACF,KAbU,EAcVC,KAdU,CAcHC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAdP,CAAb,CADF,KAgBK,OAAO,IAAP;AACN;AA7CS,CAAZ;AAgDA,eAAeV,GAAf","sourcesContent":["import { modalAlertError } from \"./Alert\";\nconst corsApi = \"https://stark-fjord-10743.herokuapp.com/\";\n\nconst api = {\n  get: async (url) => {\n    if (url)\n      return await fetch(url)\n        .then(async (data) => {\n          if (data.status === 200) return await data.json();\n          else {\n            data.text().then((text) => modalAlertError(text));\n            return null;\n          }\n        })\n        .catch((error) => console.log(\"error\", error));\n  },\n  delete: async (url) => {\n    if (url)\n      return await fetch(corsApi + url, {\n        method: \"DELETE\",\n      })\n        .then(async (data) => {\n          if (data.status === 202) return true;\n          else {\n            data.text().then((text) => modalAlertError(text));\n            return null;\n          }\n        })\n        .catch((error) => console.log(\"error\", error));\n  },\n  post: async (url, body) => {\n    if (body)\n      return await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n      })\n        .then(async (data) => {\n          if (data.status === 201) return true;\n          else {\n            data.text().then((text) => modalAlertError(text));\n            return null;\n          }\n        })\n        .catch((error) => console.log(\"error\", error));\n    else return null;\n  },\n};\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}