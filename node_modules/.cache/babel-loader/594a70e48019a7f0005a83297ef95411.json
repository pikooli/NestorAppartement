{"ast":null,"code":"import store from \"../store\";\nimport ActionType from \"../Reducers/ActionType\";\n\nfunction getState() {\n  return store.getState();\n}\n\nfunction reset() {\n  store.dispatch({\n    type: ActionType.reset\n  });\n}\n\nfunction setAp(apartment) {\n  if (typeof apartment === \"object\") {\n    store.dispatch({\n      type: ActionType.setAp,\n      payload: apartment\n    });\n    return true;\n  } else return false;\n}\n\nfunction deleteAp() {\n  store.dispatch({\n    type: ActionType.deleteAp\n  });\n  return true;\n}\n\nfunction getAp() {\n  return store.getState().apartment;\n}\n\nfunction setDetailsAp(apartment) {\n  if (typeof apartment === \"object\") {\n    store.dispatch({\n      type: ActionType.setDetailsAp,\n      payload: apartment\n    });\n    return true;\n  } else return false;\n}\n\nfunction deleteDetailsAp() {\n  store.dispatch({\n    type: ActionType.deleteDetailsAp\n  });\n  return true;\n}\n\nfunction getDetailsAp() {\n  return store.getState().detailsApartment;\n}\n\nfunction setClient(client) {\n  if (typeof client === \"object\") {\n    store.dispatch({\n      type: ActionType.setClient,\n      payload: client\n    });\n    return true;\n  } else return false;\n}\n\nfunction deleteCLient() {\n  store.dispatch({\n    type: ActionType.deleteCLient\n  });\n  return true;\n}\n\nfunction getClient() {\n  return store.getState().client;\n}\n\nfunction setRoom(room) {\n  if (typeof room === \"object\") {\n    store.dispatch({\n      type: ActionType.setRoom,\n      payload: room\n    });\n    return true;\n  } else return false;\n}\n\nfunction removeRoom() {\n  store.dispatch({\n    type: ActionType.removeRoom\n  });\n  return true;\n}\n\nfunction getRoom() {\n  return store.getState().room;\n}\n\nfunction addRoom(room) {\n  if (typeof room === \"object\") {\n    store.dispatch({\n      type: ActionType.addRoom,\n      payload: room\n    });\n    return true;\n  } else return false;\n}\n\nfunction deleteRoom(roomIndex) {\n  if (typeof roomIndex === \"number\") {\n    store.dispatch({\n      type: ActionType.deleteRoom,\n      payload: roomIndex\n    });\n    return true;\n  } else return false;\n}\n\nconst redux = {\n  getState,\n  reset,\n  getAp,\n  setAp,\n  deleteAp,\n  setDetailsAp,\n  deleteDetailsAp,\n  getDetailsAp,\n  getClient,\n  setClient,\n  deleteCLient,\n  getRoom,\n  setRoom,\n  removeRoom,\n  addRoom,\n  deleteRoom\n};\nexport default redux;","map":{"version":3,"sources":["/Users/pascal/test/NestorAppartement/src/Redux/Actions/ReduxActions.js"],"names":["store","ActionType","getState","reset","dispatch","type","setAp","apartment","payload","deleteAp","getAp","setDetailsAp","deleteDetailsAp","getDetailsAp","detailsApartment","setClient","client","deleteCLient","getClient","setRoom","room","removeRoom","getRoom","addRoom","deleteRoom","roomIndex","redux"],"mappings":"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","sourcesContent":["import store from \"../store\";\nimport ActionType from \"../Reducers/ActionType\";\n\nfunction getState() {\n  return store.getState();\n}\n\nfunction reset() {\n  store.dispatch({ type: ActionType.reset });\n}\n\nfunction setAp(apartment) {\n  if (typeof apartment === \"object\") {\n    store.dispatch({ type: ActionType.setAp, payload: apartment });\n    return true;\n  } else return false;\n}\n\nfunction deleteAp() {\n  store.dispatch({ type: ActionType.deleteAp });\n  return true;\n}\nfunction getAp() {\n  return store.getState().apartment;\n}\n\nfunction setDetailsAp(apartment) {\n  if (typeof apartment === \"object\") {\n    store.dispatch({ type: ActionType.setDetailsAp, payload: apartment });\n    return true;\n  } else return false;\n}\n\nfunction deleteDetailsAp() {\n  store.dispatch({ type: ActionType.deleteDetailsAp });\n  return true;\n}\nfunction getDetailsAp() {\n  return store.getState().detailsApartment;\n}\n\nfunction setClient(client) {\n  if (typeof client === \"object\") {\n    store.dispatch({ type: ActionType.setClient, payload: client });\n    return true;\n  } else return false;\n}\n\nfunction deleteCLient() {\n  store.dispatch({ type: ActionType.deleteCLient });\n  return true;\n}\n\nfunction getClient() {\n  return store.getState().client;\n}\nfunction setRoom(room) {\n  if (typeof room === \"object\") {\n    store.dispatch({ type: ActionType.setRoom, payload: room });\n    return true;\n  } else return false;\n}\n\nfunction removeRoom() {\n  store.dispatch({ type: ActionType.removeRoom });\n  return true;\n}\n\nfunction getRoom() {\n  return store.getState().room;\n}\n\nfunction addRoom(room) {\n  if (typeof room === \"object\") {\n    store.dispatch({ type: ActionType.addRoom, payload: room });\n    return true;\n  } else return false;\n}\n\nfunction deleteRoom(roomIndex) {\n  if (typeof roomIndex === \"number\") {\n    store.dispatch({\n      type: ActionType.deleteRoom,\n      payload: roomIndex,\n    });\n    return true;\n  } else return false;\n}\nconst redux = {\n  getState,\n  reset,\n  getAp,\n  setAp,\n  deleteAp,\n  setDetailsAp,\n  deleteDetailsAp,\n  getDetailsAp,\n  getClient,\n  setClient,\n  deleteCLient,\n  getRoom,\n  setRoom,\n  removeRoom,\n  addRoom,\n  deleteRoom,\n};\n\nexport default redux;\n"]},"metadata":{},"sourceType":"module"}