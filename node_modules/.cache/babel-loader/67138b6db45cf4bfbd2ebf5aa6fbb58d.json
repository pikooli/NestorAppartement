{"ast":null,"code":"import url from \"../../Utlis/Url\";\nimport api from \"../../Utlis/ApiRequest\";\nimport ReduxActions from \"../../Redux/Actions/ReduxActions\";\nimport { modalAlertError } from \"../../Utlis/Alert\";\n\nasync function addingToExistingApartment(createRoomValue, apartmentId) {\n  return await api.post(url.room.base, {\n    number: createRoomValue.number,\n    area: createRoomValue.area,\n    price: createRoomValue.price,\n    apartmentId: apartmentId\n  });\n}\n\nexport async function addingRoom(createRoomValue, apartmentId) {\n  if (apartmentId) {\n    addingToExistingApartment(createRoomValue, apartmentId).then(data => {\n      if (!data) modalAlertError();else window.location.href = `/apartment/${apartmentId}`;\n    });\n  } else {\n    ReduxActions.addRoom(createRoomValue);\n    window.location.href = `/createApartment`;\n  }\n}","map":{"version":3,"sources":["/Users/pascal/test/NestorAppartement/src/Apartments/CreateRoom/Utils.js"],"names":["url","api","ReduxActions","modalAlertError","addingToExistingApartment","createRoomValue","apartmentId","post","room","base","number","area","price","addingRoom","then","data","window","location","href","addRoom"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,eAAT,QAAgC,mBAAhC;;AAEA,eAAeC,yBAAf,CAAyCC,eAAzC,EAA0DC,WAA1D,EAAuE;AACrE,SAAO,MAAML,GAAG,CAACM,IAAJ,CAASP,GAAG,CAACQ,IAAJ,CAASC,IAAlB,EAAwB;AACnCC,IAAAA,MAAM,EAAEL,eAAe,CAACK,MADW;AAEnCC,IAAAA,IAAI,EAAEN,eAAe,CAACM,IAFa;AAGnCC,IAAAA,KAAK,EAAEP,eAAe,CAACO,KAHY;AAInCN,IAAAA,WAAW,EAAEA;AAJsB,GAAxB,CAAb;AAMD;;AAED,OAAO,eAAeO,UAAf,CAA0BR,eAA1B,EAA2CC,WAA3C,EAAwD;AAC7D,MAAIA,WAAJ,EAAiB;AACfF,IAAAA,yBAAyB,CAACC,eAAD,EAAkBC,WAAlB,CAAzB,CAAwDQ,IAAxD,CAA8DC,IAAD,IAAU;AACrE,UAAI,CAACA,IAAL,EAAWZ,eAAe,GAA1B,KACKa,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,cAAaZ,WAAY,EAAjD;AACN,KAHD;AAID,GALD,MAKO;AACLJ,IAAAA,YAAY,CAACiB,OAAb,CAAqBd,eAArB;AACAW,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,kBAAxB;AACD;AACF","sourcesContent":["import url from \"../../Utlis/Url\";\nimport api from \"../../Utlis/ApiRequest\";\nimport ReduxActions from \"../../Redux/Actions/ReduxActions\";\nimport { modalAlertError } from \"../../Utlis/Alert\";\n\nasync function addingToExistingApartment(createRoomValue, apartmentId) {\n  return await api.post(url.room.base, {\n    number: createRoomValue.number,\n    area: createRoomValue.area,\n    price: createRoomValue.price,\n    apartmentId: apartmentId,\n  });\n}\n\nexport async function addingRoom(createRoomValue, apartmentId) {\n  if (apartmentId) {\n    addingToExistingApartment(createRoomValue, apartmentId).then((data) => {\n      if (!data) modalAlertError();\n      else window.location.href = `/apartment/${apartmentId}`;\n    });\n  } else {\n    ReduxActions.addRoom(createRoomValue);\n    window.location.href = `/createApartment`;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}